# Read metrics about cpu usage
[[inputs.cpu]]
  # Whether to report per-cpu stats or not
  percpu = false
  # Whether to report total system cpu stats or not
  totalcpu = true
  # If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  report_active = true
  # Filter which fields to send to output
  fieldpass = [ "usage_system", "usage_active", "usage_user", "usage_iowait", "usage_irq", "usage_softirq" ]
  [inputs.cpu.tags]
    input_type = "cpu"

# Read metrics about memory usage
[[inputs.mem]]
  # Filter which fields to send to output
  fieldpass = ["active", "available", "buffered", "cached", "free", "slab", "total", "used", "available_percent", "used_percent", "dirty"]
  [inputs.mem.tags]
    input_type = "mem"

# Read metrics about swap memory usage
[[inputs.swap]]
  [inputs.swap.tags]
    input_type = "swap"

# Read metrics about disk usage by mount point
[[inputs.disk]]
  # Ignore some mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "rootfs", "vboxsf", "nfs", "devfs", "iso9660", "overlay", "squashfs"]
  # Filter which fields to send to output
  fieldpass = ["used_percent", "free", "used", "total", "inodes_free"]
  [inputs.disk.tags]
    input_type = "disk"
  [inputs.disk.tagdrop]
    device = ["*docker*"]
    path = ["*docker/devicemapper*", "*docker/overlay*", "*docker/plugins*"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  # Filter disk
  devices = ["sd*"]
  # Filter which fields to send to output
  fieldpass = ["*_time", "iops_in_progress", "reads", "writes", "*_bytes"]
  [inputs.diskio.tags]
    input_type = "diskio"
  [inputs.diskio.tagdrop]
    name = ["dm*"]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  # Filter which fields to send to output
  fieldpass = ["context_switches", "interrupts", "processes_forked"]
  [inputs.kernel.tags]
    input_type = "kernel"

# Read metrics about system load & uptime
[[inputs.system]]
  # Filter which fields to send to output
  fieldpass = ["load*", "uptime", "n_cpus"]
  [inputs.system.tags]
    input_type = "system"

# Get the number of processes and group them by status
[[inputs.processes]]
  # Filter which fields to send to output
  fieldpass = ["running", "sleeping", "zombies", "dead", "stopped", "idle", "blocked", "paging"]
  [inputs.processes.tags]
    input_type = "processes"

# Read metrics about network interface usage
[[inputs.net]]
  # Filter which fields to send to output
  fieldpass = ["drop_in", "drop_out", "bytes_recv", "bytes_sent", "err_in", "err_out", "packets_recv", "packets_sent"]
  [inputs.net.tags]
    input_type = "net"
  [inputs.net.tagdrop]
    interface = ["veth*", "docker*", "vboxnet*"]

# Read TCP metrics such as established, time wait and sockets counts.
[[inputs.netstat]]
  # Filter which fields to send to output
  fieldpass = ["tcp_established", "tcp_time_wait", "tcp_close_wait", "tcp_syn_sent", "tcp_listen"]
  [inputs.netstat.tags]
    input_type = "netstat"

# Read Multicast related metrics
[[inputs.nstat]]
  # Filter which fields to send to output
  fieldpass = ["IpExtInMcastOctets", "IpExtOutMcastOctets"]
  [inputs.nstat.tags]
    input_type = "nstat"

# Read network stats using custom script
#[[inputs.exec]]
#  name_override = "network"
#  commands = ['/etc/telegraf/lg-custom-get-network-stats.sh -c net']
#  interval = "5s"
#  timeout = "5s"
#  data_format = "logfmt"
#  [inputs.exec.tags]
#    input_type = "network"
#[[aggregators.basicstats]]
#  namepass = ["network"]
#  period = "60s"
#  drop_original = true
#  stats = ["mean"]
